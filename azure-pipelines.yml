# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- admin/azure-pipelines

pool:
  vmImage: macOS-11

variables:
  VENDOR_CACHE_FOLDER: $(Build.SourcesDirectory)/src/xcode/vendor
  LOCAL_CELLAR_CACHE_FOLDER: /usr/local/Cellar
  LOCAL_OPT_CACHE_FOLDER: /usr/local/opt
  LOCAL_BIN_CACHE_FOLDER: /usr/local/bin
  LOCAL_HOMEBREW_CACHE_FOLDER: /usr/local/Homebrew
  RUNNER_HOMEBREW_CACHE_FOLDER: /Users/runner/Library/Caches/Homebrew
  RUNNER_RUBY_CACHE_FOLDER: /Users/runner/.rubies/ruby-*/bin

jobs:
- job: dependencies
  steps:
  - script: |
      sw_vers  
      xcodebuild -version
      ls -n /Applications/ | grep Xcode*
    displayName: 'Check MacOS and Xcode Version'

  - script: |
      pwd 
      ls -la
    displayName: 'Show Workspace'

  - task: Cache@2
    displayName: 'Restore Vendor Cache'
    inputs:
      key: 'vendor_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        vendor_cache | "$(Agent.OS)"
        vendor_cache
      path: $(VENDOR_CACHE_FOLDER)
      cacheHitVar: VENDOR_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Restore /usr/local/opt Cache'
    inputs:
      key: 'local_opt_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_opt_cache | "$(Agent.OS)"
        local_opt_cache
      path: $(LOCAL_OPT_CACHE_FOLDER)
      cacheHitVar: LOCAL_OPT_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Restore /usr/local/bin Cache'
    inputs:
      key: 'local_bin_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_bin_cache | "$(Agent.OS)"
        local_bin_cache
      path: $(LOCAL_BIN_CACHE_FOLDER)
      cacheHitVar: LOCAL_BIN_CACHE_RESTORED

  - script: |
      echo VENDOR_CACHE_RESTORED: $(VENDOR_CACHE_RESTORED)
      echo LOCAL_OPT_CACHE_RESTORED: $(LOCAL_OPT_CACHE_RESTORED)
      echo LOCAL_BIN_CACHE_RESTORED: $(LOCAL_BIN_CACHE_RESTORED)
    displayName: 'Check Result of Restoring Caches'
      
  - task: Cache@2
    displayName: 'Restore /usr/local/Homebrew Tools Cache'
    inputs:
      key: 'local_homebrew_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json"'
      restoreKeys: |
        local_homebrew_cache | "$(Agent.OS)"
        local_homebrew_cache
      path: $(LOCAL_HOMEBREW_CACHE_FOLDER)
      cacheHitVar: LOCAL_HOMEBREW_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Restore /Users/runner/Library/Caches/Homebrew Tools Cache'
    inputs:
      key: 'runner_homebrew_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json"'
      restoreKeys: |
        runner_homebrew_cache | "$(Agent.OS)"
        runner_homebrew_cache
      path: $(RUNNER_HOMEBREW_CACHE_FOLDER)
      cacheHitVar: RUNNER_HOMEBREW_CACHE_RESTORED

#  - task: Cache@2
#    displayName: 'Restore /Users/runner/.rubies/ruby-*/bin Tools Cache'
#    inputs:
#      key: 'runner_ruby_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json"'
#      restoreKeys: |
#        runner_ruby_cache | "$(Agent.OS)"
#        runner_ruby_cache
#      path: $(RUNNER_RUBY_CACHE_FOLDER)
#      cacheHitVar: RUNNER_RUBY_CACHE_RESTORED

  - script: |
      echo LOCAL_HOMEBREW_CACHE_RESTORED: $(LOCAL_HOMEBREW_CACHE_RESTORED)
      echo RUNNER_HOMEBREW_CACHE_RESTORED: $(RUNNER_HOMEBREW_CACHE_RESTORED)
#      echo RUNNER_RUBY_CACHE_RESTORED: $(RUNNER_RUBY_CACHE_RESTORED)      
    displayName: 'Check Result of Restoring Tools Caches'

  - script: |
      sudo gem install rake bundler:2.1.4
    displayName: 'Install Bundler'

  - script: |
      cd src/xcode && bundle install --path=vendor --jobs=8
    displayName: 'Install Dependencies'

  - script: |
      cd /usr/local/opt
      ls -la
    displayName: 'Show /usr/local/opt'

  - script: |
      cd /usr/local/bin
      ls -la
    displayName: 'Show /usr/local/bin'

  - script: |
      cd /usr/local/Homebrew
      ls -la
    displayName: 'Show /usr/local/Homebrew'

  - script: |
      cd /Users/runner/Library/Caches/Homebrew
      ls -la
    displayName: 'Show /Users/runner/Library/Caches/Homebrew'
  
  - script: |
      cd /Users/runner/
      ls -la
    displayName: 'Show /Users/runner'

  - task: Cache@2
    displayName: 'Store Vendor Cache'
    inputs:
      key: 'vendor_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        vendor_cache | "$(Agent.OS)"
        vendor_cache
      path: $(VENDOR_CACHE_FOLDER)

  - task: Cache@2
    displayName: 'Store /usr/local/opt Cache'
    inputs:
      key: 'local_opt_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_opt_cache | "$(Agent.OS)"
        local_opt_cache
      path: $(LOCAL_OPT_CACHE_FOLDER)

  - task: Cache@2
    displayName: 'Store /usr/local/bin Cache'
    inputs:
      key: 'local_bin_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_bin_cache | "$(Agent.OS)"
        local_bin_cache
      path: $(LOCAL_BIN_CACHE_FOLDER)

  - task: Cache@2
    displayName: 'Store /usr/local/Homebrew Tools Cache'
    inputs:
      key: 'local_homebrew_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json'
      restoreKeys: |
        local_homebrew_cache | "$(Agent.OS)"
        local_homebrew_cache
      path: $(LOCAL_HOMEBREW_CACHE_FOLDER)
      cacheHitVar: LOCAL_HOMEBREW_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Store /Users/runner/Library/Caches/Homebrew Tools Cache'
    inputs:
      key: 'runner_homebrew_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json'
      restoreKeys: |
        runner_homebrew_cache | "$(Agent.OS)"
        runner_homebrew_cache
      path: $(RUNNER_HOMEBREW_CACHE_FOLDER)
      cacheHitVar: RUNNER_HOMEBREW_CACHE_RESTORED

#  - task: Cache@2
#    displayName: 'Store /Users/runner/.rubies/ruby-*/bin Tools Cache'
#    inputs:
#      key: 'runner_ruby_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/Brewfile.lock.json'
#      restoreKeys: |
#        runner_ruby_cache | "$(Agent.OS)"
#        runner_ruby_cache
#      path: $(RUNNER_RUBY_CACHE_FOLDER)
#      cacheHitVar: RUNNER_RUBY_CACHE_RESTORED

- job: 'BuildForTesting'
  dependsOn: 'dependencies'
  steps:

  - task: Cache@2
    displayName: 'Restore Vendor Cache'
    inputs:
      key: 'vendor_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        vendor_cache | "$(Agent.OS)"
        vendor_cache
      path: $(VENDOR_CACHE_FOLDER)
      cacheHitVar: VENDOR_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Restore /usr/local/opt Cache'
    inputs:
      key: 'local_opt_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_opt_cache | "$(Agent.OS)"
        local_opt_cache
      path: $(LOCAL_OPT_CACHE_FOLDER)
      cacheHitVar: LOCAL_OPT_CACHE_RESTORED

  - task: Cache@2
    displayName: 'Restore /usr/local/bin Cache'
    inputs:
      key: 'local_bin_cache | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/xcode/Gemfile.lock'
      restoreKeys: |
        local_bin_cache | "$(Agent.OS)"
        local_bin_cache
      path: $(LOCAL_BIN_CACHE_FOLDER)
      cacheHitVar: LOCAL_BIN_CACHE_RESTORED

  - script: |
      echo VENDOR_CACHE_RESTORED: $(VENDOR_CACHE_RESTORED)
      echo LOCAL_OPT_CACHE_RESTORED: $(LOCAL_OPT_CACHE_RESTORED)
      echo LOCAL_BIN_CACHE_RESTORED: $(LOCAL_BIN_CACHE_RESTORED)
    displayName: 'Check Result of Restoring Caches'

  - script: |
      cd src/xcode && bundle exec fastlane build_for_testing
    displayName: 'Build for Testing'

- job: 'Swiftlint'
  dependsOn: 'dependencies'
  steps:
  - script: |
      swiftlint --version
      pwd
      ls -la
      cd src/xcode
      ls -la    
      bundle exec fastlane lint
    displayName: 'SwiftLint'

- job: 'RunAllTests'
  dependsOn: 'dependencies'
  steps:
  - script: |
      pwd
      ls -la
      cd src/xcode
      ls -la
      bundle exec fastlane test_without_building testplan:AllTests
    displayName: 'Run AllTests'